#!/bin/bash

# ===================================
# Script de setup pour le monorepo
# ===================================

set -e

echo "üöÄ Setup du monorepo Territoires Sensibles"
echo "=========================================="

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# V√©rifier Node.js
print_status "V√©rification de Node.js..."
if ! command -v node &> /dev/null; then
    print_error "Node.js n'est pas install√©. Veuillez l'installer depuis https://nodejs.org/"
    exit 1
fi

NODE_VERSION=$(node --version | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt 18 ]; then
    print_error "Node.js version 18+ requise. Version actuelle: $(node --version)"
    exit 1
fi

print_success "Node.js $(node --version) d√©tect√©"

# V√©rifier npm
print_status "V√©rification de npm..."
if ! command -v npm &> /dev/null; then
    print_error "npm n'est pas install√©"
    exit 1
fi

print_success "npm $(npm --version) d√©tect√©"

# Installation des d√©pendances backend
print_status "Installation des d√©pendances backend..."
cd backend
if [ ! -f "package.json" ]; then
    print_error "package.json manquant dans le dossier backend"
    exit 1
fi

npm install
print_success "D√©pendances backend install√©es"

# Configuration backend
print_status "Configuration du backend..."
if [ ! -f ".env" ]; then
    if [ -f ".env.example" ]; then
        cp .env.example .env
        print_warning "Fichier .env cr√©√© depuis .env.example"
        print_warning "‚ö†Ô∏è  Veuillez configurer les variables d'environnement dans backend/.env"
    else
        print_warning "Aucun fichier .env.example trouv√© pour le backend"
    fi
fi

# G√©n√©ration des cl√©s de s√©curit√©
print_status "G√©n√©ration des cl√©s de s√©curit√©..."
if [ -f "scripts/generate-keys.js" ]; then
    node scripts/generate-keys.js
    print_warning "‚ö†Ô∏è  Copiez les cl√©s g√©n√©r√©es dans backend/.env"
else
    print_warning "Script de g√©n√©ration de cl√©s non trouv√©"
fi

cd ..

# Installation des d√©pendances frontend
print_status "Installation des d√©pendances frontend..."
cd frontend
if [ ! -f "package.json" ]; then
    print_error "package.json manquant dans le dossier frontend"
    exit 1
fi

npm install
print_success "D√©pendances frontend install√©es"

# Configuration frontend
print_status "Configuration du frontend..."
if [ ! -f ".env" ]; then
    if [ -f ".env.example" ]; then
        cp .env.example .env
        print_warning "Fichier .env cr√©√© depuis .env.example"
        print_warning "‚ö†Ô∏è  Veuillez configurer les variables d'environnement dans frontend/.env"
    else
        print_warning "Aucun fichier .env.example trouv√© pour le frontend"
    fi
fi

cd ..

# Cr√©ation des dossiers n√©cessaires
print_status "Cr√©ation des dossiers n√©cessaires..."
mkdir -p backend/logs
mkdir -p backend/public/uploads
mkdir -p backend/.tmp

print_success "Dossiers cr√©√©s"

# Instructions finales
echo ""
echo "üéâ Setup termin√© avec succ√®s !"
echo "=============================="
echo ""
echo "üìã Prochaines √©tapes :"
echo "1. Configurer backend/.env avec vos cl√©s de s√©curit√©"
echo "2. Configurer frontend/.env avec l'URL de votre API"
echo "3. Lancer le d√©veloppement :"
echo "   - Terminal 1: cd backend && npm run dev"
echo "   - Terminal 2: cd frontend && npm run dev"
echo ""
echo "üåê URLs locales :"
echo "   - Frontend: http://localhost:5173"
echo "   - Backend: http://localhost:1337"
echo "   - Admin Strapi: http://localhost:1337/admin"
echo ""
echo "üìö Documentation :"
echo "   - Guide de d√©ploiement: backend/docs/DEPLOY.md"
echo "   - Guide rapide: backend/README-DEPLOY.md"
echo ""
print_success "Setup termin√© ! üöÄ"
